<style>
    .chart-label-name{
        width:100px;
        margin-left:385px;
        margin-bottom:0px;
        font-size:14px;
    }
    .pagelink{
        margin-right:20px;
        text-decoration:none;

    }
</style>


<br />
<div class="container animated fadeIn">
    <div class="row type-row">

        <div class="col-md-5"></div>
        <a class="pagelink" href="/skills/lanuages">Languages</a>
        <a class="pagelink" href="/skills/technologies">Technologies</a>
        <a class="pagelink" href="/skills/other">Other</a>
        </div>


        </div>
    </div>

    <hr />

    

    {{#if languages}}
    <div class="container animated fadeIn">
        <h1 class="text-center">Languages</h1>
        <p class="text-center">This page shows you all the coding languages I am currently proficient in. Check back in the future and I'm sure you'll see even more added to this list!</p>
        <hr />
    </div>

    

    <div class="container chart-container animated fadeIn">
        <div class="row" style="margin-bottom:50px;">
            <div class="col-md-8 offset-md-2">
                {{!-- <div class="alert alert-info" role="alert"> --}}
                    <p class="text-center"><i class="fas fa-info-circle" style="color:royalblue;"></i> This chart is meant to represent my comfort and proficiency level with the labeled technologies.</p>
            
                {{!-- </div> --}}
            </div>
        </div>
        <div class="ct-chart ct-golden-section mx-auto" style="height:500px; width:70%"></div>
        
        
    </div>
        <script>

        // HTML Label plugin
        Chartist.plugins = Chartist.plugins || {};
        Chartist.plugins.ctHtmlLabels = function(options) {
            return function(chart) {
                chart.on('draw', function(context) {
                if (context.type === 'label') {
                    // Best to combine with something like sanitize-html
                    context.element.empty()._node.innerHTML = context.text;
                }
                });
            }
        }
            

        // Initialize a Line chart in the container with the ID chart2
        var chart = new Chartist.Bar('.ct-chart', {
            labels: ['<p class="chart-label-name">C#</p> <i class="fab fa-microsoft fa-2x"></i>', '<p class="chart-label-name">Visual Basic</p> <i class="fab fa-microsoft fa-2x"></i>','<p class="chart-label-name">SQL</p> <i class="fas fa-database fa-2x"></i>','<p class="chart-label-name">CSS3</p> <i class="fab fa-css3 fa-2x"></i>', '<p class="chart-label-name">HTML5</p> <i class="fab fa-html5 fa-2x"></i>','<p class="chart-label-name">JavaScript</p> <i class="fab fa-js-square fa-2x"></i>'],
            series: [80, 80, 80, 85, 100, 100]
            }, {
            axisX: {
            scaleMinSpace: 100,
            offset: 80,
            showLabel:false,
            showGrid:false
            },
            axisY: {
                offset:50,
            },
            distributeSeries: true,
            horizontalBars: true,
            plugins: [Chartist.plugins.ctHtmlLabels()]
        });


        chart.on('draw', function (data) {
        if (data.type === 'bar') {
            data.element.attr({
                style: 'stroke-width: 0px'
            });
            var strokeWidth = 15; 

            data.element.animate({
                    x2: {
                        begin: 0,
                        dur: 2000,
                        from: data.x1,
                        to: data.x2,
                        easing: Chartist.Svg.Easing.easeOutSine,
                    },
                    'stroke-width': {
                        begin: 0,
                        dur: 1,
                        from: 1,
                        to: strokeWidth,
                        fill: 'freeze',
                    }
                }, false);
        }
    });


    </script>
    {{/if}}

    {{#if technologies}}

    <div class="container animated fadeIn">
        <h1 class="text-center">Technologies</h1>
        <p class="text-center">Technologies refer to things such as frameworks, libraries, and runtime environments. There are many new technologies being released to make development easier, so this list is expected to grow quickly.</p>
        <hr />
    </div>

    <div class="container chart-container animated fadeIn">
        <div class="row" style="margin-bottom:50px;">
            <div class="col-md-8 offset-md-2">
                {{!-- <div class="alert alert-info" role="alert"> --}}
                    <p class="text-center"><i class="fas fa-info-circle" style="color:royalblue;"></i> This chart is meant to represent my comfort and proficiency level with the labeled technologies.</p>
            
                {{!-- </div> --}}
            </div>
        </div>
        <div class="ct-chart ct-golden-section mx-auto" style="height:500px; width:70%"></div>

    </div>
        <script>

        // HTML Label plugin
        Chartist.plugins = Chartist.plugins || {};
        Chartist.plugins.ctHtmlLabels = function(options) {
            return function(chart) {
                chart.on('draw', function(context) {
                if (context.type === 'label') {
                    // Best to combine with something like sanitize-html
                    context.element.empty()._node.innerHTML = context.text;
                }
                });
            }
        }
            

        // Initialize a Line chart in the container with the ID chart2
        var chart = new Chartist.Bar('.ct-chart', {
            labels: ['<p class="chart-label-name">JQuery</p> <i class="fas fa-dollar-sign fa-2x" data-fa-transform="up-3"></i>', '<p class="chart-label-name">Bootstrap</p> <i class="fab fa-twitter fa-2x" data-fa-transform="up-3"></i>','<p class="chart-label-name">Sequelize</p> <i class="fas fa-database fa-2x" data-fa-transform="up-3"></i>','<p class="chart-label-name">Mongoose</p> <i class="fas fa-database fa-2x" data-fa-transform="up-3"></i>','<p class="chart-label-name">React.js</p> <i class="fab fa-react fa-2x" data-fa-transform="up-3"></i>', '<p class="chart-label-name">Express.js</p> <i class="fab fa-fab fa-node-js fa-2x" data-fa-transform="up-3"></i>','<p class="chart-label-name">Node.js</p> <i class="fab fa-node fa-2x" data-fa-transform="up-3"></i>'],
            series: [90, 90, 80, 80, 70, 100, 100]
            }, {
            axisX: {
            scaleMinSpace: 100,
            offset: 80,
            showLabel:false,
            showGrid:false
            },
            axisY: {
                offset:50,
            },
            distributeSeries: true,
            horizontalBars: true,
            plugins: [Chartist.plugins.ctHtmlLabels()]
        });


        chart.on('draw', function (data) {
        if (data.type === 'bar') {
            data.element.attr({
                style: 'stroke-width: 0px'
            });
            var strokeWidth = 15; 

            data.element.animate({
                    x2: {
                        begin: 0,
                        dur: 2000,
                        from: data.x1,
                        to: data.x2,
                        easing: Chartist.Svg.Easing.easeOutSine,
                    },
                    'stroke-width': {
                        begin: 0,
                        dur: 1,
                        from: 1,
                        to: strokeWidth,
                        fill: 'freeze',
                    }
                }, false);
        }
    });


    </script>
    {{/if}}

    {{#if other}}

    <div class="container animated fadeIn">
        <h1 class="text-center">Other</h1>
        <p class="text-center">This category refers to anything that doesn't fall into "technology" or "languages", these are skills such as using Git, Command Line Terminals, and working with API's.</p>
        <hr />
    </div>

    <div class="container chart-container animated fadeIn">
        <div class="row" style="margin-bottom:50px;">
            <div class="col-md-8 offset-md-2">
                {{!-- <div class="alert alert-info" role="alert"> --}}
                    <p class="text-center"><i class="fas fa-info-circle" style="color:royalblue;"></i> This chart is meant to represent my comfort and proficiency level with the labeled technologies.</p>
            
                {{!-- </div> --}}
            </div>
        </div>
        <div class="ct-chart ct-golden-section mx-auto" style="height:500px; width:70%"></div>

    </div>
        <script>

        // HTML Label plugin
        Chartist.plugins = Chartist.plugins || {};
        Chartist.plugins.ctHtmlLabels = function(options) {
            return function(chart) {
                chart.on('draw', function(context) {
                if (context.type === 'label') {
                    // Best to combine with something like sanitize-html
                    context.element.empty()._node.innerHTML = context.text;
                }
                });
            }
        }
            

        // Initialize a Line chart in the container with the ID chart2
        var chart = new Chartist.Bar('.ct-chart', {
            labels: ['<p class="chart-label-name">Git</p> <i class="fab fa-git-square fa-2x" data-fa-transform="down-7"></i>', '<p class="chart-label-name">npm</p> <i class="fab fa-npm fa-2x" data-fa-transform="down-7"></i>','<p class="chart-label-name">Bash</p> <i class="fas fa-terminal fa-2x" data-fa-transform="down-7"></i>','<p class="chart-label-name">API</p> <i class="fas fa-plug fa-2x" data-fa-transform="down-7"></i>'],
            series: [100, 100, 100, 100]
            }, {
            axisX: {
            scaleMinSpace: 100,
            offset: 80,
            showLabel:false,
            showGrid:false
            },
            axisY: {
                offset:50,
            },
            distributeSeries: true,
            horizontalBars: true,
            plugins: [Chartist.plugins.ctHtmlLabels()]
        });


        chart.on('draw', function (data) {
        if (data.type === 'bar') {
            data.element.attr({
                style: 'stroke-width: 0px'
            });
            var strokeWidth = 15; 

            data.element.animate({
                    x2: {
                        begin: 0,
                        dur: 2000,
                        from: data.x1,
                        to: data.x2,
                        easing: Chartist.Svg.Easing.easeOutSine,
                    },
                    'stroke-width': {
                        begin: 0,
                        dur: 1,
                        from: 1,
                        to: strokeWidth,
                        fill: 'freeze',
                    }
                }, false);
        }
    });


    </script>
    {{/if}}

    

</div>
<br />
<br />
<br />
<br />
<br />
<br />
<br />
<br />

